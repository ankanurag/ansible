#!/bin/bash
#
# Description: Apache Tomcat init script
# processname: kiit-tomcat
# chkconfig: 235 20 80
#
#
# Copyright (C) 2014 Miglen Evlogiev
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Initially forked from: gist.github.com/valotas/1000094
# Source: gist.github.com/miglen/5590986


export TOMCAT_NAME=TOMCAT
#Location of JAVA_HOME (bin files)
export JAVA_HOME=/usr

#Add Java binary files to PATH
export PATH=$JAVA_HOME/bin:$PATH

#CATALINA_HOME is the location of the bin files of Tomcat
export CATALINA_HOME=/opt/tomcats/tomcat

#CATALINA_BASE is the location of the configuration files of this instance of Tomcat
export CATALINA_BASE="$CATALINA_HOME"

#TOMCAT_USER is the default user of tomcat
export TOMCAT_USER=tomcat

#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {start|stop|kill|status|restart}"

#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=20

tomcat_pid() {
        if [[ ! -f $CATALINA_HOME/catalina.pid ]];then
           echo 0
        else
           pid_in_file=$(cat $CATALINA_HOME/catalina.pid)
           if [[ $(ps -ef|awk '{print $2}'|grep -cw $pid_in_file) -eq 1 ]];then
              echo $pid_in_file
           else
              echo 0
           fi
           # echo `ps -fe | grep $CATALINA_BASE | grep -v grep | tr -s " "|cut -d" " -f2`
        fi
}

start() {
  pid=$(tomcat_pid)
  if [ $pid -ne 0 ]
  then
    echo -e "$TOMCAT_NAME Tomcat is already running (pid: $pid)"
  else
    # Start tomcat
    echo -e "Starting $TOMCAT_NAME tomcat"
    #ulimit -n 100000
    #umask 007
    #/bin/su -p -s /bin/sh $TOMCAT_USER
        if [ `user_exists $TOMCAT_USER` = "1" ]
        then
                /bin/su $TOMCAT_USER -c $CATALINA_HOME/bin/startup.sh
        else
                echo -e "$TOMCAT_NAME Tomcat user $TOMCAT_USER does not exist. Starting with $(id)"
                sh $CATALINA_HOME/bin/startup.sh
        fi
        status
  fi
  return 0
}

status(){
          pid=$(tomcat_pid)
          /bin/su $TOMCAT_USER -c "kill -3 ${pid}"
          if [ $pid -ne 0 ]
            then echo -e "$TOMCAT_NAME Tomcat is running with pid: $pid"
          else
            echo -e "$TOMCAT_NAME Tomcat is not running"
            return 3
          fi
}

terminate() {
        if [ $pid -eq 0 ];then
           echo "$TOMCAT_NAME Tomcat is already dead/stopped"
        else
                echo -e "\n$TOMCAT_NAME Terminating Tomcat"
                kill -9 $(tomcat_pid) && sleep 5
        fi
}

stop() {
  pid=$(tomcat_pid)
  if [ $pid -ne 0 ]
  then
    echo -e "Stoping $TOMCAT_NAME Tomcat"
    /bin/su $TOMCAT_USER -c "kill -3 ${pid}"
    if  [ `user_exists $TOMCAT_USER` = "1" ];then
        /bin/su $TOMCAT_USER -c $CATALINA_HOME/bin/shutdown.sh
    else
        echo -e "$TOMCAT_NAME Tomcat user $TOMCAT_USER does not exist. Stopping with $(id)"
        sh $CATALINA_HOME/bin/shutdown.sh
    fi

    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\nwaiting for processes to exit";
      sleep 1
      let count=$count+1;
    done

    if [ $count -gt $kwait ]; then
      echo -n -e "\nkilling processes didn't stop after $SHUTDOWN_WAIT seconds"
      terminate
    fi
  else
    echo -e "$TOMCAT_NAME Tomcat is not running"
  fi

  return 0
}

user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}

case $1 in
        start)
          start
        ;;
        stop)
          stop
        ;;
        restart)
          stop
          start
        ;;
        status)
                status
                exit $?
        ;;
        kill)
                terminate
        ;;
        *)
                echo -e $TOMCAT_USAGE
        ;;
esac
exit 0
